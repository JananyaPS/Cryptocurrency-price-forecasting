# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jSHWPx73wn0eQFg5mNg60nthjcHn2iZC
"""

import streamlit as st
import pandas as pd

# Title
st.title("Cryptocurrency Price Forecast (2025 - 2030)")
@st.cache_data
def load_data():
    df = pd.read_csv("final_weighted_predictions.csv")
    df["Date"] = pd.to_datetime(df["Date"], format="%d-%m-%Y")  # Fix for your date format
    return df




predictions_df = load_data()

# Sidebar - Cryptocurrency selection
crypto = st.selectbox("Select Cryptocurrency", options=predictions_df["Crypto"].unique())

# Sidebar - Date range selection
min_date = predictions_df["Date"].min().date()
max_date = predictions_df["Date"].max().date()
start_date = st.date_input("Start Date", min_value=min_date, max_value=max_date, value=min_date)
end_date = st.date_input("End Date", min_value=min_date, max_value=max_date, value=max_date)

# Validate date input
if start_date > end_date:
    st.error("⚠️ Start date must be before end date.")
else:
    # Filter based on selection
    filtered_df = predictions_df[
        (predictions_df["Crypto"] == crypto) &
        (predictions_df["Date"].dt.date >= start_date) &
        (predictions_df["Date"].dt.date <= end_date)
    ].sort_values("Date")

    if filtered_df.empty:
        st.warning("No data available for the selected range.")
    else:
        # Show filtered data
        st.subheader(f"{crypto} Forecasted Prices")
        st.dataframe(filtered_df)

        # Line chart
        st.line_chart(filtered_df.set_index("Date")["Final Prediction"])
        #st.line_chart(filtered_df.set_index("Date")["Weighted_Average"])

        # CSV Download
        csv = filtered_df.to_csv(index=False).encode("utf-8")
        st.download_button(
            label="Download Filtered Predictions as CSV",
            data=csv,
            file_name=f"{crypto}_forecast_{start_date}_{end_date}.csv",
            mime="text/csv"
        )